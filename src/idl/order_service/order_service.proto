syntax = "proto3";

package order_service;

service OrderService {
    rpc CreateOrder(Order) returns (PrimaryKey) {}
    rpc OrderList(OrderListReq) returns (OrderListResp) {}

    rpc CreateCourier(Courier) returns (PrimaryKey) {}
    // rpc CourierList(CourierListReq) returns (CourierListResp) {}
    // rpc UpdateCourier(Courier) returns (Empty) {}
    // rpc DeleteCourier(PrimaryKey) returns (Empty) {}
    // rpc GetCourier(PrimaryKey) returns (Courier) {}


    // rpc CreateItem(Item) returns (PrimaryKey) {}
    // rpc RestaurantItemsGroupedByCategory(RestaurantItemsGroupedByCategoryReq) returns (RestaurantItemsGroupedByCategoryResp) {}
}

message Empty { 
}

message PrimaryKey {
    string id = 1;
}

message Order {
    string id = 1;
    string code = 2;
    string note = 3;
    uint32 total_price = 4;
    string status = 5;
    string restaurant_id = 6;
    string customer_id = 7;
    string courier_id = 8;
    string adress = 9;
    float lat = 10;
    float long = 11;
    repeated Item items = 12;
}

message Item {
    string id = 1;
    string item_id = 2;
    string order_id = 3;
    uint32 qty = 4;
    uint32 price = 5;
}

message OrderListReq {
    string status = 1;
}

message OrderListResp {
    uint32 count = 1;
    repeated Order orders = 2;
}

message Courier {
    string id = 1;
    string name = 2;
    string phone_number = 3;
    string photo = 4;
    string car_model = 5;
    string car_number = 6;
    string car_color = 7;
    bool is_available = 8;
    float lat = 9;
    float long = 10;
}

message CourierListReq {
    uint32 limit = 1;
    uint32 page = 2;
    string search = 3;
}

message CourierListResp {
    int32 count = 1;
    repeated Courier couriers = 2;
}